{
  "contractName": "Token",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "who",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\n\n/// @title  Token - Abstract Contract\n/// @dev    Inherits OpenZeppelin IERC20\n//  @todo   Change other contracts to use IERC20 directly - backwards compatible below\ncontract Token is IERC20 {}\n",
  "sourcePath": "@gnosis.pm/util-contracts/contracts/Token.sol",
  "ast": {
    "absolutePath": "@gnosis.pm/util-contracts/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        10060
      ]
    },
    "id": 10061,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10056,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 10057,
        "nodeType": "ImportDirective",
        "scope": 10061,
        "sourceUnit": 10130,
        "src": "25:64:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10058,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10129,
              "src": "275:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10129",
                "typeString": "contract IERC20"
              }
            },
            "id": 10059,
            "nodeType": "InheritanceSpecifier",
            "src": "275:6:32"
          }
        ],
        "contractDependencies": [
          10129
        ],
        "contractKind": "contract",
        "documentation": "@title  Token - Abstract Contract\n @dev    Inherits OpenZeppelin IERC20",
        "fullyImplemented": false,
        "id": 10060,
        "linearizedBaseContracts": [
          10060,
          10129
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 10061,
        "src": "257:27:32"
      }
    ],
    "src": "0:285:32"
  },
  "legacyAST": {
    "absolutePath": "@gnosis.pm/util-contracts/contracts/Token.sol",
    "exportedSymbols": {
      "Token": [
        10060
      ]
    },
    "id": 10061,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10056,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 10057,
        "nodeType": "ImportDirective",
        "scope": 10061,
        "sourceUnit": 10130,
        "src": "25:64:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10058,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10129,
              "src": "275:6:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$10129",
                "typeString": "contract IERC20"
              }
            },
            "id": 10059,
            "nodeType": "InheritanceSpecifier",
            "src": "275:6:32"
          }
        ],
        "contractDependencies": [
          10129
        ],
        "contractKind": "contract",
        "documentation": "@title  Token - Abstract Contract\n @dev    Inherits OpenZeppelin IERC20",
        "fullyImplemented": false,
        "id": 10060,
        "linearizedBaseContracts": [
          10060,
          10129
        ],
        "name": "Token",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 10061,
        "src": "257:27:32"
      }
    ],
    "src": "0:285:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-01-18T08:01:22.386Z",
  "devdoc": {
    "details": "Inherits OpenZeppelin IERC20",
    "methods": {},
    "title": "Token - Abstract Contract"
  },
  "userdoc": {
    "methods": {}
  }
}